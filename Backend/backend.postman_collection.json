{
	"info": {
		"_postman_id": "1eaa1e3f-1ed7-421e-a5fe-795b67c3ed76",
		"name": "backend",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "mandatory",
			"item": [
				{
					"name": "edit",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "77fc49f3-67c6-4b62-9f70-2fd5de24d3cc",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"url\") + \"/login\",",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({un: pm.globals.get(\"username\"), pw: pm.globals.get(\"passwort\")})",
									"    }",
									"    }, function (err, response) {",
									"            console.log(response.json().token);",
									"            pm.environment.set(\"token\", response.json().token);",
									"});",
									"",
									"pm.sendRequest(pm.environment.get(\"url\") + \"/news\", function (err, response) {",
									"    if(!response.json().some(a=> a.articleId === pm.environment.get(\"id\"))){",
									"        pm.environment.set(\"id\", response.json().reverse()[0].articleId); ",
									"        console.log(\"set id\", pm.environment.get(\"id\"));",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "user",
								"value": "{{username}}"
							},
							{
								"key": "token",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"modified\",\n  \"body\": \"modifiedalksdfjalksdjflaksjd\"\n}"
						},
						"url": {
							"raw": "{{url}}/edit/{{id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"edit",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "image",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2aa7d5ec-f138-4574-a002-523c3a0bec62",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "8ed499a8-5930-429a-ab44-81f7be077047",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/image/640/5cb03be9fc4e55367c18ef75",
							"host": [
								"{{url}}"
							],
							"path": [
								"image",
								"640",
								"5cb03be9fc4e55367c18ef75"
							]
						}
					},
					"response": []
				},
				{
					"name": "abrufen",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e74f2c08-7fa3-4796-80d2-c8b3a77c1274",
								"exec": [
									"/* ",
									"",
									"var i = setInterval(()=>",
									"    pm.sendRequest(pm.environment.get(\"url\") + \"/news\", function (err, response) {",
									"    if(!response.json().some(a=> a.articleId === pm.environment.get(\"id\"))){",
									"        pm.environment.set(\"id\", response.json().reverse()[0].articleId); ",
									"        console.log(\"set id\", pm.environment.get(\"id\"));",
									"    }",
									"}),10)",
									"",
									"setTimeout(()=>clearInterval(i), 10000)",
									"",
									"*/",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c2af7088-c25a-4f16-a6ab-0db70246fdb7",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"var Ajv = require('ajv');\r",
									"var validator = new Ajv({logger: console});\r",
									"var schema = {\r",
									"     \"type\": \"array\",\r",
									"    \"items\": {\r",
									"            \"properties\":{\r",
									"                \"images\": {\r",
									"                   \"type\": \"array\",\r",
									"                    \"items\": {\r",
									"                        \"type\": \"string\",\r",
									"                    }\r",
									"                },\r",
									"                \"_id\": {\r",
									"                   \"type\": \"string\",\r",
									"                },\r",
									"                \"articleId\": {\r",
									"                   \"type\": \"number\",\r",
									"                },\r",
									"                \"title\": {\r",
									"                   \"type\": \"string\",\r",
									"                },\r",
									"                \"body\": {\r",
									"                   \"type\": \"string\",\r",
									"                },\r",
									"                \"date\": {\r",
									"                   \"type\": \"string\",\r",
									"                },\r",
									"                \"type\":{\r",
									"                   \"type\": \"string\",\r",
									"                },\r",
									"                \"__v\": {\r",
									"                   \"type\": \"number\",\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    };\r",
									"\r",
									"pm.test('Schema is valid', function() {\r",
									"        pm.expect(validator.validate(schema, pm.response.json())).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test('set last id', function() {\r",
									"    pm.environment.set(\"id\", pm.response.json().reverse()[0].articleId); \r",
									"    console.log(pm.environment.get(\"id\"));\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/news",
							"host": [
								"{{url}}"
							],
							"path": [
								"news"
							]
						}
					},
					"response": []
				},
				{
					"name": "neuer Eintrag",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "61215142-480a-4d46-9d0f-66478c5a7e79",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"url\") + \"/login\",",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({un: pm.environment.get(\"username\"), pw: pm.environment.get(\"passwort\")})",
									"    }",
									"    }, function (err, response) {",
									"            console.log(response.json().token);",
									"            pm.environment.set(\"token\", response.json().token);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "98584a1f-cab5-4536-b879-e80e013dd50d",
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"var Ajv = require('ajv'),\r",
									"    ajv = new Ajv({logger: console}),\r",
									"    schema = {\r",
									"        \"aritcleId\": {\r",
									"            \"type\": \"number\"\r",
									"        }\r",
									"    };\r",
									"\r",
									"pm.test('Schema is valid', function() {\r",
									"    pm.expect(ajv.validate(schema, pm.response.json())).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test('set id', function (err, response) {\r",
									"    pm.environment.set(\"id\", pm.response.json().articleId); \r",
									"    console.log(\"set id\", pm.environment.get(\"id\"));\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "token",
								"value": "{{token}}"
							},
							{
								"key": "user",
								"value": "{{username}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"new article\",\n  \"body\": \"testte\"\n}"
						},
						"url": {
							"raw": "{{url}}/neu",
							"host": [
								"{{url}}"
							],
							"path": [
								"neu"
							]
						}
					},
					"response": []
				},
				{
					"name": "login",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "69f14b29-c128-47dc-95f4-9190c08178a5",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"un\": \"TESTuser\", \"pw\": \"TESTpassword\"}"
						},
						"url": {
							"raw": "{{url}}/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "l√∂schen",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "1dc5cff8-1dee-4433-ae1d-cccbe74df474",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"url\") + \"/login\",",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({un: pm.globals.get(\"username\"), pw: pm.globals.get(\"passwort\")})",
									"    }",
									"    }, function (err, response) {",
									"            console.log(response.json().token);",
									"            pm.environment.set(\"token\", response.json().token);",
									"});",
									"",
									"pm.sendRequest(pm.environment.get(\"url\") + \"/news\", function (err, response) {",
									"    if(!response.json().some(a=> a.articleId === pm.environment.get(\"id\"))){",
									"        pm.environment.set(\"id\", response.json().reverse()[0].articleId); ",
									"        console.log(\"set id\", pm.environment.get(\"id\"));",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "user",
								"value": "{{username}}"
							},
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/delete/{{id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"delete",
								"{{id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "delete image",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "c8a71b02-276b-4230-892e-8381559d4f81",
						"exec": [
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url\") + \"/login\",",
							"    method: 'POST',",
							"    header: 'Content-Type:application/json',",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({un: pm.globals.get(\"username\"), pw: pm.globals.get(\"passwort\")})",
							"    }",
							"    }, function (err, response) {",
							"            console.log(response.json().token);",
							"            pm.environment.set(\"token\", response.json().token);",
							"});",
							"",
							"pm.sendRequest(pm.environment.get(\"url\") + \"/news\", function (err, response) {",
							"    if(!response.json().some(a=> a.articleId === pm.environment.get(\"id\"))){",
							"        pm.environment.set(\"id\", response.json().reverse()[0].articleId); ",
							"        console.log(\"set id\", pm.environment.get(\"id\"));",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "user",
						"value": "{{username}}"
					},
					{
						"key": "token",
						"value": "{{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/deleteimage/5cb03b35db3fef12e4415b87",
					"host": [
						"{{url}}"
					],
					"path": [
						"deleteimage",
						"5cb03b35db3fef12e4415b87"
					]
				}
			},
			"response": []
		},
		{
			"name": "add image ",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "57783840-1f23-49a4-9704-09b29a516ea7",
						"exec": [
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url\") + \"/login\",",
							"    method: 'POST',",
							"    header: 'Content-Type:application/json',",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({un: pm.globals.get(\"username\"), pw: pm.globals.get(\"passwort\")})",
							"    }",
							"    }, function (err, response) {",
							"            console.log(response.json().token);",
							"            pm.environment.set(\"token\", response.json().token);",
							"});",
							"",
							"pm.sendRequest(pm.environment.get(\"url\") + \"/news\", function (err, response) {",
							"    if(!response.json().some(a=> a.articleId === pm.environment.get(\"id\"))){",
							"        pm.environment.set(\"id\", response.json().reverse()[0].articleId); ",
							"        console.log(\"set id\", pm.environment.get(\"id\"));",
							"    }",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "user",
						"value": "{{username}}"
					},
					{
						"key": "token",
						"value": "{{token}}"
					},
					{
						"key": "desc",
						"value": "test"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "image",
							"type": "file",
							"src": ""
						},
						{
							"key": "",
							"value": "",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{url}}/image/{{id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"image",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "contact",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "c8aaa704-d510-4add-bdd6-455f00e1e043",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"email@server.de\",\n  \"betreff\": \"sehr wichtiger Betreff\",\n  \"name\": \"Max Musterman\",\n  \"text\": \"Ich m√∂chte mit ihnen √ºber Gott reden\"\n}"
				},
				"url": {
					"raw": "{{url}}/contact",
					"host": [
						"{{url}}"
					],
					"path": [
						"contact"
					]
				}
			},
			"response": []
		}
	]
}