
variables:
  ANDROID_COMPILE_SDK: "28"
  ANDROID_BUILD_TOOLS: "28.0.2"
  ANDROID_SDK_TOOLS:   "4333796"

stages:
  - test
  - postman
  - build

# cache:
#   paths:
#   - Frontend/node_modules/
#   - Backend/node_modules/

assembleDebug:
  image: openjdk:8-jdk
  stage: build
  only:
    changes:
      - Fronend/*
  except:
    - manual
  script:
    - apt-get --quiet update --yes
    - curl -sL https://deb.nodesource.com/setup_10.x | bash -
    - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1 nodejs
    - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
    - unzip -d android-sdk-linux android-sdk.zip
    - echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
    - echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null
    - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
    - export ANDROID_HOME=$PWD/android-sdk-linux
    - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
    - set +o pipefail
    - yes | android-sdk-linux/tools/bin/sdkmanager --licenses
    - set -o pipefail
    - cd Frontend
    - npm install
    - npm run prep
    - ls
    - cd android
    - chmod +x ./gradlew
    - ./gradlew assembleDebug
  artifacts:
    paths:
    - Frontend/android/app/build/outputs/
    - Frontend/www/
    expire_in: 1 week

backend:
  stage: test
  image: docker
  services:
    - docker:dind
  only:
    changes:
      - Backend/*
  before_script:
    - apk add --update nodejs
  script:
      # install docker compose
      - apk add --no-cache python py2-pip git openssl
      - pip install --no-cache-dir docker-compose==1.16.0
      - cd Backend
      - openssl req -x509 -newkey rsa:4096 -keyout privkey.pem -out fullchain.pem -days 365 -nodes -subj "/C=DE/ST=NRW/L=Berlin/O=My Inc/OU=DevOps/CN=www.fampedia.de/emailAddress=dev@fampedia.de"
      - docker-compose --file ci-compose.yml up --build --abort-on-container-exit

backendPostman:
  stage: postman
  image: docker
  allow_failure: true
  services:
    - docker:dind
  only:
    changes:
      - Backend/*
  before_script:
    - apk add --update nodejs nodejs-npm
  script:
    # install docker compose
    - apk add --no-cache python py2-pip git openssl
    - pip install --no-cache-dir docker-compose==1.16.0
    - cd Backend
    - openssl req -x509 -newkey rsa:4096 -keyout privkey.pem -out fullchain.pem -days 365 -nodes -subj "/C=DE/ST=NRW/L=Berlin/O=My Inc/OU=DevOps/CN=www.fampedia.de/emailAddress=dev@fampedia.de"
    - docker-compose up -d
    - npm install -g newman
    - newman run backend.postman_collection.json -e fampedia.postman_environment.json --folder mandatory -k --timeout-request 10000  --env-var url=tcp://docker:3000
  after_script:
    - cd Backend
    - docker-compose down